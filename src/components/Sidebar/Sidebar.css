.sidebar {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    /* rem = short for 'root-em'. Dictates element's font size relative to the size of the root element.
    So if the root element is 16px, an element with the value of 1rem will also equal 16px.*/
    background: #000;
    width: 200px;
    color: #fff;
    height: 100vh;
    /* vh = viewport height */
    position: sticky;
    left: 0;
    top: 0;
    z-index: 1;
    /* z-index = controls the stacking order of overlapping elements on a page.
    An element with a higher z-index value will appear in front of an element with a lower z-index value.
    Called 'z-index' bc it sets the order of elements along the z-axis.*/
    transition: width 0.3s ease-in-out;
}

.sidebar--logo {
    text-align: center;
    font-size: 1.5rem;
    font-weight: bold;
    padding: 1rem;
}

.sidebar-toggle {
    display: none;
}

@media (max-width: 500px) {
    .sidebar {
        width: 0;
        overflow: hidden;
        /* overflow = occurs when an element's content does not fit entirely inside the element box.
        This can happen when an element has a specified height that's too small for the content it contains.
        This property is used to control what happens to the overflow.*/
    }

    .sidebar.open {
        width: 200px;
        position: fixed;
        top: 0;
        left: 0;
        transition: width 0.3s ease-in-out;
    }

    .sidebar.open .sidebar--logo {
        margin-top: 3rem;
    }

    .sidebar-toggle {
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
        width: 50px;
        height: 30px;
        border-radius: 4px;
        background: #eee;
        color: #000;
        position: absolute;
        /* absolute = elements are completely taken out of regular flow of the web page.
        They are not positioned based on their usual place in the document flow.
        They are based on the position of their ancestor.*/
        z-index: 2;
        margin: 10px 5px;
        cursor: pointer;
    }
}